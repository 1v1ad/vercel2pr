// admin/flags.js ‚Äî —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ —Ñ–ª–∞–≥–∏: –±–µ–∑ —ç–º–æ–¥–∑–∏ –Ω–∞ Windows/–±–µ–∑ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
(function () {
  // 1) –ì—Ä—É–±—ã–π –¥–µ—Ç–µ–∫—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
  const IS_WINDOWS = /windows/i.test(navigator.userAgent || '');

  // 2) –ó–∞–º–µ—Ä —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞: –µ—Å–ª–∏ üá©üá™ —Ä–∏—Å—É–µ—Ç—Å—è –∫–∞–∫ –¥–≤–µ –±—É–∫–≤—ã, —à–∏—Ä–∏–Ω–∞ ~ "DE"
  function isFlagEmojiUnsupportedByWidth() {
    try {
      const probeWrap = document.createElement('div');
      probeWrap.style.cssText = 'position:fixed;left:-10000px;top:-10000px;';
      const mk = (txt) => {
        const s = document.createElement('span');
        s.style.cssText =
          'font-size:16px; line-height:1; white-space:nowrap; ' +
          'text-transform:none; ' +
          'font-family:"Apple Color Emoji","Segoe UI Emoji","Noto Color Emoji",system-ui,sans-serif;';
        s.textContent = txt;
        return s;
      };
      const sFlag = mk('üá©üá™');
      const sDE   = mk('DE');
      probeWrap.appendChild(sFlag);
      probeWrap.appendChild(sDE);
      document.body.appendChild(probeWrap);
      const wFlag = sFlag.getBoundingClientRect().width;
      const wDE   = sDE.getBoundingClientRect().width;
      probeWrap.remove();

      // –µ—Å–ª–∏ –ø–æ—á—Ç–∏ –∫–∞–∫ "DE", —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ —Ü–≤–µ—Ç–Ω–æ–π —Ñ–ª–∞–≥
      return Math.abs(wFlag - wDE) < 2; // –ø–æ—Ä–æ–≥ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
    } catch (_) {
      return true; // –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π: —Å—á–∏—Ç–∞–µ–º "–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
    }
  }

  const FLAG_EMOJI_SUPPORTED = !IS_WINDOWS && !isFlagEmojiUnsupportedByWidth();

  function ccToFlag(cc) {
    if (!cc) return '';
    const s = String(cc).trim().toUpperCase();
    if (s.length !== 2) return s;
    return s.replace(/./g, ch => String.fromCodePoint(0x1F1E6 + (ch.charCodeAt(0) - 65)));
  }

  function decorateFlags(root = document) {
    const nodes = root.querySelectorAll('[data-cc]');
    nodes.forEach(el => {
      const cc = (el.getAttribute('data-cc') || '').trim().toUpperCase();
      if (!cc) { el.textContent = ''; return; }

      if (FLAG_EMOJI_SUPPORTED) {
        const emoji = ccToFlag(cc);
        el.innerHTML =
          `<span class="flag-emoji" style="text-transform:none;font-family:'Apple Color Emoji','Segoe UI Emoji','Noto Color Emoji',system-ui,sans-serif">${emoji || ''}</span>` +
          ` <span class="cc" style="text-transform:none">${cc}</span>`;
      } else {
        // –ë–µ–∑ —ç–º–æ–¥–∑–∏ ‚Äî —Ç–æ–ª—å–∫–æ –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã. –ù–∏–∫–∞–∫–∏—Ö ¬´de¬ª
        el.innerHTML = `<span class="cc" style="text-transform:none">${cc}</span>`;
      }
    });
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => decorateFlags());
  } else {
    decorateFlags();
  }

  window.decorateFlags = decorateFlags;
})();
